
base_experiment: # the base config object  
  environment:
    num_clients: 48
    num_selected_clients: 48
    num_malicious_clients: 0
    experiment_name: "cifar_clients"
    use_config_dir: true
  server:
    num_rounds: 160
    num_test_batches: 5
    aggregator:
      name: FedAvg
    global_learning_rate: 1.0
  client:
    model_name: resnet18
    model_init_path: "/home/ubuntu/rofl-project-code/models/resnet18_initialized.txt"
    benign_training:
      num_epochs: 2
      batch_size: 64
      optimizer: SGD
      learning_rate: 0.05
      decay:
        type: boundaries
        decay_boundaries: [ 4000 ]
        decay_values: [ 1.0, 0.1 ]
    num_params: 274442
    quantization: $VARIES$
  dataset:
    dataset: cifar10
    data_distribution: IID
    augment_data: true
  job:
    minutes: 240 # Max. minutes to run. Leonhard has 240 and 1440 queues
    cpu_cores: 20
    cpu_mem_per_core: 4096
    use_gpu: 1
    gpu_memory_min: 10240
  crypto:
    enc_type: $VARIES #l2, Range, Plain
    value_range: 8
    n_partition: 64
    l2_value_range: 32
    check_percentage: 0.013 # 0-100 for Range, # 3652 , 1.331 %
    fp_bits: 16
    fp_frac: 7
  e2e:
    client_machines: 4 # is this correct?
    speculative_execution: $VARIES$

experiments: # in the experiments object you have a list for the different experiments with the values for the fields marked as $VARIES$ in the base config object.

#Config(environment=Environment(num_clients=48, num_selected_clients=48, num_malicious_clients=0, experiment_name='cifar_clients', num_selected_malicious_clients=None, malicious_client_indices=None, attack_frequency=None, attacker_full_dataset=False, attacker_full_knowledge=False, load_model=None, ignore_malicious_update=False, print_every=1, print_batch_text=False, save_updates=False, save_norms=False, save_weight_distributions=False, save_history=False, save_model_at=[], save_weight_outside_bound=None, print_backdoor_eval=False, seed=0, use_config_dir=True), server=Server(num_rounds=160, num_test_batches=5, federated_dropout=None, aggregator={'name': 'FedAvg'}, global_learning_rate=1.0, intrinsic_dimension=40000, gaussian_noise=0.0), client=ClientConfig(model_name='resnet18_intrinsic', benign_training=TrainingConfig(num_epochs=2, batch_size=64, learning_rate=0.3, decay=LearningDecay(type='boundaries', decay_steps=None, decay_rate=None, decay_boundaries=[90, 140], decay_values=[1.0, 0.5, 0.1], step_epochs=True), optimizer='SGD', regularization_rate=None), quantization=Quantization(type='probabilistic', bits=8, frac=7), malicious=None, optimized_training=True, gaussian_noise=None, clip=None, model_weight_regularization=None, debug_client_training=False, disable_bn=False), dataset=Dataset(dataset='cifar10', data_distribution='IID', number_of_samples=-1, augment_data=True, normalize_mnist_data=False), hyperparameters=HyperparameterConfig(args={'client': {'benign_training': {'decay': {'decay_boundaries': [90, 140], 'decay_values': [1.0, 0.5, 0.1], 'step_epochs': True, 'type': 'boundaries'}, 'learning_rate': 0.3}, 'model_init_path': '/home/ubuntu/rofl-project-code/models/resnet18_intrinsic_40k.txt', 'model_name': 'resnet18_intrinsic', 'num_params': 40000, 'quantization': {'bits': 8, 'frac': 7, 'type': 'probabilistic'}}, 'crypto': {'enc_type': 'l2', 'fp_bits': 32, 'fp_frac': 7}, 'e2e': {'speculative_execution': True}, 'server': {'intrinsic_dimension': 40000}}))

- client: # l2, optimized
    model_name: resnet18_intrinsic
    num_params: 40000 # different from int dim because of batchnorm ... ?
    model_init_path: "/home/ubuntu/rofl-project-code/models/resnet18_intrinsic_40k.txt"
    quantization:
      type: probabilistic
      bits: 8
      frac: 7
    benign_training:
      learning_rate: 0.3
      decay:
        step_epochs: true
        type: boundaries
        decay_boundaries: [ 90, 140 ]
        decay_values: [ 1.0, 0.5, 0.1 ]
  server:
    intrinsic_dimension: 40000
  crypto:
    enc_type: l2Compressed
    fp_bits: 32
    fp_frac: 7
  e2e:
    speculative_execution: true

- client:
    quantization:
      type: probabilistic
      bits: 8
      frac: 7
  crypto:
    enc_type: RangeCompressed
  e2e:
    speculative_execution: true

- crypto: # extrapolate
    enc_type: l2Compressed
    fp_bits: 32
  client:
    quantization:
      type: probabilistic
      bits: 8
      frac: 7
  e2e:
    speculative_execution: false
  server:
    num_rounds: 5

- client: # extrapolate
    quantization:
      type: probabilistic
      bits: 8
      frac: 7
  crypto:
    enc_type: RangeCompressed
    check_percentage: 1.0
  e2e:
    speculative_execution: false
  server:
    num_rounds: 5

- client:
    quantization: ~
  crypto:
    enc_type: Plain
  e2e:
    speculative_execution: false
